# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp # Set up stack pointer
        call main          # Execute main program
        halt               # Terminate program

# Sample linked list
        .align 8
ele1:
        .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0


main:
        irmovq ele1, %rdi     # 用 %di 来传递参数
        call sum_list
        ret

# long sum_list(list_ptr ls)
# ls store in %rdi

sum_list:
        irmovq $0, %rax       # 将 %rax 初始化为 0，来存储元素和

loop:  
        andq %rdi, %rdi       # 设置 condition codes
        je return             # conditional jump

        mrmovq 0(%rdi), %rsi
        addq %rsi, %rax       # 计算和

        mrmovq 8(%rdi), %rdi  # 将指针(下一个 struct 的地址)放进 %rdi

        andq %rdi, %rdi
        jne loop

return:
        ret

        .pos 0x400            # TODO 这个值怎么确定？
stack:
