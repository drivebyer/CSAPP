# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp
        call main
        halt
.align 8
# Source block
src:
        .quad 0x00a
        .quad 0x0b0
        .quad 0xc00
# Destination block
dest:
        .quad 0x111
        .quad 0x222
        .quad 0x333
# main method
main:
        irmovq src, %rdi
        irmovq dest, %rsi
        irmovq $3, %rdx      # 调用函数之前准备好参数
        call copy_block
        ret
# long copy_block(long* src, long* dest, long len)
copy_block:
        pushq %r12           # 临时存放 val 值
        pushq %r13           #
        pushq %r14           #
        irmovq $0, %rax      # result = 0，TODO %rax 中的值不需要保存吗？
        irmovq $1, %r13      #
        irmovq $8, %r14      #
        jmp loop_test
loop:  
        mrmovq 0(%rdi), %r12   # long val = *src
        addq %r14, %rdi        # src++  
        rmmovq %r12, (%rsi)    # *dest = val
        addq %r14, %rsi        # dest++，这样 dest 中就存放了下一个 struct 的地址
        xorq %r12, %rax        # result ^= val
        subq %r13, %rdx        # len--
loop_test:
        andq %rdx, %rdx      # len > 0？
        jg loop
        popq %r14
        popq %r13
        popq %r12
        ret        
.pos 0x300
stack:
